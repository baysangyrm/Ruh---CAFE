
const divInstall = document.getElementById('installContainer');
const butInstall = document.getElementById('butInstall');

window.addEventListener('beforeinstallprompt', (event) => {
    // –ó–∞–ø—Ä–µ—Ç –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –º–∏–Ω–∏-–ø–∞–Ω–µ–ª–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö.
    event.preventDefault();
    console.log('üëç', 'beforeinstallprompt', event);
    // –£–±–∏—Ä–∞–µ–º —Å–æ–±—ã—Ç–∏–µ, —á—Ç–æ–±—ã –µ–≥–æ –º–æ–∂–Ω–æ –±—ã–ª–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∑–∂–µ.
    window.deferredPrompt = event;
    // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å ¬´hidden¬ª –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∫–Ω–æ–ø–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏.
    divInstall.classList.toggle('hidden', false);
  });
  butInstall.addEventListener('click', async () => {
    console.log('üëç', 'butInstall-clicked');
    const promptEvent = window.deferredPrompt;
    if (!promptEvent) {
      // –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.
      return;
    }
    // –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É.
    promptEvent.prompt();
    // –ó–∞–ø–∏—Å–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∂—É—Ä–Ω–∞–ª.
    const result = await promptEvent.userChoice;
    console.log('üëç', 'userChoice', result);
    // –°–±—Ä–æ—Å–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:
    // prompt() –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑.
    window.deferredPrompt = null;
    // –°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏.
    divInstall.classList.toggle('hidden', true);
  });
  window.addEventListener('appinstalled', (event) => {
    console.log('üëç', 'appinstalled', event);
    // –û—á–∏—Å—Ç–∏—Ç—å ¬´deferredPrompt¬ª –¥–ª—è —Å–±–æ—Ä—â–∏–∫–∞ –º—É—Å–æ—Ä–∞
    window.deferredPrompt = null;
  });



/* Only register a service worker if it's supported */
if ('serviceWorker' in navigator) {
  navigator.serviceWorker.register('/service-worker.js');
}

/**
 * Warn the page must be served over HTTPS
 * The `beforeinstallprompt` event won't fire if the page is served over HTTP.
 * Installability requires a service worker with a fetch event handler, and
 * if the page isn't served over HTTPS, the service worker won't load.
 */
if (window.location.protocol === 'http:') {
  const requireHTTPS = document.getElementById('requireHTTPS');
  const link = requireHTTPS.querySelector('a');
  link.href = window.location.href.replace('http://', 'https://');
  requireHTTPS.classList.remove('hidden');
}

